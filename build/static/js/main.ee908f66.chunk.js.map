{"version":3,"sources":["Components/Footer/Footer.js","Components/Navbar/Navbar.js","Components/IngredientsForm/IngredientsForm.js","Components/AddRecipeModal/AddRecipeModal.js","Components/Home/Home.js","Components/AboutPage/AboutPage.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Date","getFullYear","NavbarFunction","Navbar","bg","expand","Brand","href","alt","src","width","height","Toggle","aria-controls","Collapse","id","Nav","Link","IngredientsForm","recipes","React","useState","show","setShow","ingredients","style","display","justifyContent","alignSelf","Form","inline","onSubmit","event","preventDefault","axios","get","then","response","data","console","log","filteredRecipes","requestedIngredientsArray","trim","split","cleanedRequestedIngredientsArray","forEach","ingredient","index","push","toLowerCase","listOfIngredientsForEachRecipe","cleanedRecipeIngredients","i","length","Recipe_Ingredients","Recipe_Name","recipesToReturn","listOfIngredients","indexOf","filterRecipes","node","document","createElement","recipeData","Optional_Ingredients","Website_Link","innerHTML","getElementById","appendChild","catch","error","FormControl","required","type","placeholder","onChange","target","value","bind","this","Button","variant","Modal","onHide","Header","closeButton","Title","Body","AddRecipeModal","handleClose","recipeName","optIngredients","websiteLink","onClick","newRecipe","post","res","Group","Label","Control","Text","Home","AboutPage","class","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ee908f66.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n    return(\r\n        <footer className=\"footer\">\r\n           {new Date().getFullYear()} Copyright Colin and Samuel Lightfoot.\r\n        </footer>\r\n    );\r\n}\r\n\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction NavbarFunction() {\r\n    return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand href=\"/\">\r\n        <img\r\n          alt=''\r\n          src=\"./../guinea.jpg\"\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n        />{' '}\r\n        Cooking Hero\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"\\\">Home</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n    );\r\n}\r\n\r\n\r\nexport default NavbarFunction;","import React from 'react';\r\nimport './IngredientsForm.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport axios from 'axios';\r\n\r\nfunction IngredientsForm() {\r\n    const [show, setShow] = React.useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    var recipes;\r\n\r\n    var ingredients = \"\";\r\n\r\n    const onChangeIngredients = function(event){\r\n        ingredients = event.target.value;\r\n    }\r\n\r\n    const filterRecipes = function(recipes, ingredients){\r\n        // Get and clean the user-input ingredients.\r\n        var requestedIngredientsArray = ingredients.trim().split(/[\\s,]+/);\r\n        var cleanedRequestedIngredientsArray = [];\r\n        requestedIngredientsArray.forEach( function (ingredient, index){\r\n            cleanedRequestedIngredientsArray.push(ingredient.trim().toLowerCase());\r\n        });\r\n\r\n        // Retrieve and clean up recipes - prepping ingredients for analysis.\r\n        var listOfIngredientsForEachRecipe = []\r\n        var recipeIngredients = [];\r\n        var cleanedRecipeIngredients = []\r\n        for (var i = 0; i < recipes.length; i++){\r\n            recipeIngredients = recipes[i].Recipe_Ingredients.trim().split(\",\");\r\n            recipeIngredients.forEach( function (ingredient, index){\r\n                cleanedRecipeIngredients.push(ingredient.trim().toLowerCase());\r\n            });\r\n\r\n            listOfIngredientsForEachRecipe.push([recipes[i].Recipe_Name,cleanedRecipeIngredients]);\r\n            cleanedRecipeIngredients = [];\r\n        }\r\n\r\n        console.log(listOfIngredientsForEachRecipe);\r\n        console.log(cleanedRequestedIngredientsArray);\r\n\r\n        // Only return recipes with at least one main ingredient that the user entered.\r\n        var recipesToReturn = []\r\n        listOfIngredientsForEachRecipe.forEach( function (listOfIngredients, index){\r\n            for (var i = 0; i < cleanedRequestedIngredientsArray.length; i++){\r\n                if (listOfIngredients[1].indexOf(cleanedRequestedIngredientsArray[i]) > -1){\r\n                    recipesToReturn.push(recipes[index]);\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n        console.log(recipesToReturn)\r\n        return recipesToReturn;\r\n    }\r\n\r\n    const findRecipes = function(event){\r\n        event.preventDefault();\r\n        handleShow();\r\n\r\n        axios.get('http://localhost:4000/recipes/')\r\n            .then(response => {\r\n                recipes = response.data;\r\n                console.log(recipes);\r\n                console.log(\"Ingredients Chosen:\" + ingredients);\r\n                var filteredRecipes = []\r\n                filteredRecipes = filterRecipes(recipes, ingredients);\r\n\r\n                for (var i = 0; i < filteredRecipes.length; i++){\r\n                    var node = document.createElement(\"div\");\r\n                    var recipeData = '<p>Recipe: ' + filteredRecipes[i].Recipe_Name + '<br/>';\r\n                    recipeData    += 'Ingredients: ' + filteredRecipes[i].Recipe_Ingredients + '<br/>';\r\n                    if (filteredRecipes[i].Optional_Ingredients !== \"\"){\r\n                        recipeData    += 'Opt Ingredients: ' + filteredRecipes[i].Optional_Ingredients + '<br/>';\r\n                    }\r\n                    if (filteredRecipes[i].Website_Link !== \"\"){\r\n                        recipeData    += 'Website: ' + filteredRecipes[i].Website_Link;\r\n                    }\r\n                    recipeData    +='</p>';\r\n                    node.innerHTML = recipeData\r\n                    var recipeElem = document.getElementById(\"recipes\");\r\n                    recipeElem.appendChild(node);\r\n                }\r\n                \r\n            })\r\n            .catch(function (error){\r\n                console.error(error);\r\n            })\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"recipeModal\" \r\n            style = {{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignSelf: \"center\"\r\n            }}>\r\n            <Form inline className=\"searchForm\" onSubmit={findRecipes}>\r\n                <FormControl required type=\"text\" placeholder=\"Type Ingredients\" className=\"mr-sm-2\" \r\n                    onChange={onChangeIngredients.bind(this)}/>\r\n                <Button variant=\"primary\" type=\"submit\">Search</Button>\r\n            </Form>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Here are some recipes we found...</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div id=\"recipes\"></div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default IngredientsForm;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\nfunction AddRecipeModal() {\r\n    const [show, setShow] = React.useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    var recipeName = \"\";\r\n    var ingredients = \"\"\r\n    var optIngredients = \"\";\r\n    var websiteLink = \"\";\r\n\r\n    const submitRecipe = function(event){\r\n        event.preventDefault();\r\n        console.log(\"Recipe Submitted!\")\r\n        console.log(\"Recipe Name:\" + recipeName)\r\n        console.log(\"Ingredients:\" + ingredients)\r\n        console.log(\"Opt Ingredients:\" + optIngredients)\r\n        console.log(\"Website Link:\" + websiteLink)\r\n\r\n        const newRecipe = {\r\n            Recipe_Name: recipeName,\r\n            Recipe_Ingredients: ingredients,\r\n            Optional_Ingredients: optIngredients,\r\n            Website_Link: websiteLink\r\n        }\r\n\r\n        axios.post(\"http://localhost:4000/recipes/add\", newRecipe)\r\n            .then(res => console.log(res.data));\r\n\r\n        handleClose();\r\n        recipeName = \"\";\r\n        ingredients = \"\"\r\n        optIngredients = \"\";\r\n        websiteLink = \"\";\r\n    }\r\n\r\n    const onChangeRecipeName = function(event){\r\n        recipeName = event.target.value;\r\n    }\r\n\r\n    const onChangeIngredients = function(event){\r\n        ingredients = event.target.value;\r\n        ingredients = ingredients.trim();\r\n    }\r\n\r\n    const onChangeOptIngredients = function(event){\r\n        optIngredients = event.target.value;\r\n    }\r\n\r\n    const onChangeWebsiteLink = function(event){\r\n        websiteLink = event.target.value;\r\n    }\r\n\r\n    return (\r\n        <div className=\"recipeModal\" \r\n            style = {{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignSelf: \"center\"\r\n            }}>\r\n            <Button variant=\"primary\" onClick={handleShow} className=\"modalButton\">\r\n                Add Recipe\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add Recipe</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Add the recipe you want to save.</p>\r\n                    <Form onSubmit={submitRecipe}>\r\n                        <Form.Group>\r\n                            <Form.Label>Recipe Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                placeholder=\"Enter Recipe Name\"\r\n                                type=\"text\"\r\n                                onChange={onChangeRecipeName.bind(this)}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                We bet it's tasty!\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Recipe Ingredients</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                placeholder=\"Enter Ingredients in the format 'apples, cheese, ...'\"\r\n                                type=\"text\"\r\n                                onChange={onChangeIngredients.bind(this)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Optional Ingredients</Form.Label>\r\n                            <Form.Control\r\n                                placeholder=\"Enter Ingredients in the format 'apples, cheese, ...'\"\r\n                                type=\"text\"\r\n                                onChange={onChangeOptIngredients.bind(this)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Website Link</Form.Label>\r\n                            <Form.Control\r\n                                placeholder=\"Optional\"\r\n                                type=\"text\"\r\n                                onChange={onChangeWebsiteLink.bind(this)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">Add Recipe</Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddRecipeModal;","import React from 'react';\r\nimport './Home.css';\r\nimport Navbar from \"../Navbar/Navbar\"\r\nimport Footer from \"../Footer/Footer\"\r\nimport IngredientsForm from \"../IngredientsForm/IngredientsForm\"\r\nimport AddRecipeModal from \"../AddRecipeModal/AddRecipeModal\"\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <Navbar/>\r\n        <body className=\"App-body\">\r\n          <h4 className=\"gimmeSpace\">\r\n            Figure out what you can eat with what you already have!\r\n          </h4>\r\n          <div>\r\n            <p className=\"paragraph\">\r\n              Too tired to buy groceries? Have a dinner date in your dorm soon?<br/>\r\n              Have no fear, we are here to help you! \r\n            </p>\r\n            <IngredientsForm/>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"paragraph\">Or add a new recipe here!</p>\r\n            <AddRecipeModal/>\r\n          </div>\r\n\r\n          <p></p>\r\n          <p></p>\r\n          <Footer/>\r\n        </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\"\r\nimport Footer from \"../Footer/Footer\"\r\n\r\nfunction AboutPage() {\r\n  return (\r\n    <div className=\"about\">\r\n        <Navbar/>\r\n        <div class=\"container\">\r\n            <div class=\"row align-items-center my-5\">\r\n                <div class=\"col-lg-5\">\r\n                    <h1 class=\"font-weight-light\">About</h1>\r\n                    <p>\r\n                    Colin and Sam are brothers both with interests in CS and FOOD.  \r\n                    Growing up, meals were relatively simple and without much \r\n                    nutrition&#8212;think mac n' cheese and ramen, with some veggies \r\n                    seldom sprinkled in.  Long since, the two of them have taken an \r\n                    interest in the culinary arts and the wonders of computer science: \r\n                    This site is the fruit of their efforts to help others make delicious, \r\n                    nutritious meals on a budget.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport './App.css';\r\nimport Footer from './Components/Footer/Footer';\r\nimport Home from './Components/Home/Home';\r\nimport AboutPage from './Components/AboutPage/AboutPage';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={() => <Home />} />\r\n            <Route path=\"/about\" exact component={() => <AboutPage />} />\r\n          </Switch>\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n  )\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}